{"version":3,"sources":["components/Loader/style.module.css","App.module.css","components/Nav/NavLink/index.js","components/Nav/index.js","pages/Home/index.js","components/FormikFieldWrapper/index.js","components/FormikInput/index.js","reducers/main.js","helpers/notification.js","pages/Settings/index.js","components/FormikCheckboxArray/index.js","pages/Keywords/index.js","config.js","components/Loader/index.js","pages/Mode/index.js","pages/NotFound/index.js","store.js","serviceWorker.js","index.js","App.js","helpers/notification.module.css"],"names":["module","exports","to","children","location","useLocation","className","classnames","active","pathname","startsWith","props","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","field","form","label","error","errors","name","showError","submitCount","htmlFor","domProps","_pick","value","FormikFieldWrapper","setConfig","createAction","setSelectedKeywords","setConfigAndSave","values","dispatch","getState","a","Promise","resolve","setTimeout","setSelectedKeywordsAndSave","handleActions","state","action","config","payload","keywords","selectedKeywords","hostname","username","password","port","mode","text","Alert","message","duration","cleanup","useState","rightPosition","setRightPosition","useEffect","abort","style","alert","right","close","onClick","options","wrapper","document","getElementById","body","appendChild","createElement","target","ReactDOM","render","unmountComponentAtNode","remove","validationSchema","yup","shape","required","min","max","useSelector","useDispatch","onSubmit","notification","maxWidth","initialValues","isSubmitting","component","FormikInput","disabled","selectedValues","onChange","event","setFieldValue","_xor","Number","map","option","key","checked","includes","item","FormikCheckboxArray","modes","loading","loader","setLoading","Loader","role","marginBottom","persistConfig","storage","persistedReducer","persistReducer","reducer","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","persistor","persistStore","Boolean","match","promises","all","basename","process","Nav","exact","path","Home","Settings","Keywords","Mode","NotFound","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.935851af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"style_loader__3kNYO\",\"rotate\":\"style_rotate__2a-ap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__ZTvxg\"};","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nexport default ({ to, children }) => {\n    const location = useLocation();\n\n    return (\n        <li\n            className={classnames(\"nav-item\", {\n                active: location.pathname.startsWith(to)\n            })}\n        >\n            <Link className=\"nav-link\" to={to}>\n                {children}\n            </Link>\n        </li>\n    );\n};\n","import React from \"react\";\nimport NavLink from \"./NavLink\";\nimport { Link } from \"react-router-dom\";\n\nexport default props => {\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n            <div className=\"container\">\n                <Link className=\"navbar-brand\" to=\"/\">\n                    Proxy SQL\n                </Link>\n                <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbarNavAltMarkup\"\n                    aria-controls=\"navbarNavAltMarkup\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\"\n                >\n                    <span className=\"navbar-toggler-icon\" />\n                </button>\n\n                <div\n                    className=\"collapse navbar-collapse\"\n                    id=\"navbarNavAltMarkup\"\n                >\n                    <ul className=\"navbar-nav mr-auto\">\n                        <NavLink to=\"/settings\">Settings</NavLink>\n                        <NavLink to=\"/keywords\">Keywords</NavLink>\n                        <NavLink to=\"/mode\">Mode</NavLink>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\n","import React from \"react\";\n\nexport default props => {\n    return (\n        <div>\n            <h2>About</h2>\n            <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nam\n                ipsa laboriosam architecto neque corrupti vel quam illum, amet\n                facere, deleniti, soluta ut quidem dolore beatae ipsam. Iste\n                consequatur quod, tenetur in nemo esse amet officiis veritatis,\n                voluptatibus voluptates. Est quis ad laborum consequatur sint\n                consectetur quibusdam, natus voluptas quisquam sunt quas saepe\n                animi labore cum doloribus odit velit rerum. Quas fugiat, quidem\n                sed, pariatur perspiciatis vitae sunt animi non id minus\n                adipisci, rerum quod. Omnis autem voluptatibus dicta beatae\n                ratione, unde iusto voluptate enim doloribus amet expedita odit,\n                sunt quisquam laboriosam reiciendis rerum labore corporis\n                maxime, et impedit optio dolore.\n            </p>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport default ({field, form, label, children}) => {\n    const error = form.errors[field.name];\n    const showError = error && form.submitCount > 0;\n\n    return (\n        <div className=\"form-group\">\n            {label && (\n                <label className=\"control-label\" htmlFor={field.name}>\n                    {label}\n                </label>\n            )}\n            {children}\n            {showError && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n}\n","import React from \"react\";\nimport _pick from \"lodash/pick\";\nimport FormikFieldWrapper from \"../FormikFieldWrapper\";\n\nexport default props => {\n    const domProps = _pick(props, [\n        \"autoFocus\",\n        \"autoComplete\",\n        \"type\",\n        \"style\",\n        \"id\"\n    ]);\n    const field = {\n        ...props.field,\n        value: props.field.value || \"\"\n    };\n    const error = props.form.errors[field.name];\n    const showError = error && props.form.submitCount > 0;\n\n    return (\n        <FormikFieldWrapper {...props}>\n            <input\n                className={\"form-control \" + (showError ? \"is-invalid\" : \"\")}\n                {...field}\n                {...domProps}\n            />\n        </FormikFieldWrapper>\n    );\n};\n","import { handleActions, createAction } from 'redux-actions';\n\n// Initial state\nexport const initialState = {\n    config: {\n        hostname: '',\n        username: '',\n        password: '',\n        port: '',\n        mode: 'record',\n    },\n    keywords: [\n        { id: 1, text: 'UPDATEXML' },\n        { id: 2, text: 'PROCEDURE ANALYSE' },\n        { id: 3, text: 'JSON_KEYS\\\\(' },\n        { id: 4, text: 'ORD\\\\(MID\\\\(' },\n        { id: 5, text: 'INFORMATION_SCHEMA\\\\.' },\n        { id: 6, text: 'JSON_STORAGE_FREE' },\n        { id: 7, text: 'SESSION_USER\\\\(' },\n    ],\n    selectedKeywords: [2, 4],\n};\n\n// Actions\nconst SET_CONFIG = 'proxy/settings/SET_CONFIG';\nconst SET_KEYWORDS = 'proxy/settings/SET_KEYWORDS';\nconst SET_SELECTED_KEYWORDS = 'proxy/settings/SET_SELECTED_KEYWORDS';\n\n// Action Creators\nexport const setConfig = createAction(SET_CONFIG);\nexport const setKeywords = createAction(SET_KEYWORDS);\nexport const setSelectedKeywords = createAction(SET_SELECTED_KEYWORDS);\n\nexport const loadConfig = () => {\n    return async (dispatch, getState) => {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n    };\n};\n\nexport const loadKeywords = () => {\n    return async (dispatch, getState) => {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n    };\n};\n\nexport const loadData = () => {\n    return async (dispatch, getState) => {\n        const promises = [dispatch(loadConfig()), dispatch(loadKeywords())];\n        await Promise.all(promises);\n    };\n};\n\nexport const setConfigAndSave = values => {\n    return async (dispatch, getState) => {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        dispatch(setConfig(values));\n    };\n};\n\nexport const setSelectedKeywordsAndSave = value => {\n    return async (dispatch, getState) => {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        dispatch(setSelectedKeywords(value));\n    };\n};\n\n// Reducer\nexport default handleActions(\n    {\n        [SET_CONFIG]: (state, action) => ({\n            ...state,\n            config: {\n                ...state.config,\n                ...action.payload,\n            },\n        }),\n        [SET_KEYWORDS]: (state, action) => ({\n            ...state,\n            keywords: action.payload,\n        }),\n        [SET_SELECTED_KEYWORDS]: (state, action) => ({\n            ...state,\n            selectedKeywords: action.payload,\n        }),\n    },\n    initialState\n);\n","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport style from './notification.module.css';\n\nconst Alert = ({ message = 'Are you sure?', type = 'success', duration = 5000, cleanup }) => {\n    const [rightPosition, setRightPosition] = useState(null);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setRightPosition('0px');\n        }, 100);\n\n        if (duration > 0) {\n            setTimeout(abort, duration);\n        }\n    }, []);\n\n    const abort = () => {\n        setRightPosition('-310px');\n        setTimeout(cleanup, 300);\n    };\n\n    return (\n        <div\n            className={style.alert}\n            style={{\n                ...(rightPosition ? { right: rightPosition } : {}),\n            }}\n        >\n            <div className={`alert alert-${type}`}>\n                <button type=\"button\" className={'close ' + style.close} onClick={abort}>\n                    &times;\n                </button>\n                {message}\n            </div>\n        </div>\n    );\n};\n\nexport default options => {\n    if (typeof options === 'string') {\n        options = {\n            message: options,\n        };\n    }\n\n    let wrapper = document.getElementById('proxy-notification-wrapper');\n    if (!wrapper) {\n        wrapper = document.body.appendChild(document.createElement('div'));\n        wrapper.id = 'proxy-notification-wrapper';\n        wrapper.className = style.wrapper;\n    }\n\n    const target = wrapper.appendChild(document.createElement('div'));\n    const cleanup = () => {\n        ReactDOM.unmountComponentAtNode(target);\n        setTimeout(() => target.remove());\n    };\n\n    ReactDOM.render(<Alert {...options} cleanup={cleanup} />, target);\n};\n","import React from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport FormikInput from 'components/FormikInput';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setConfigAndSave } from 'reducers/main.js';\nimport notification from 'helpers/notification';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object().shape({\n    hostname: yup.string().required(),\n    username: yup.string().required(),\n    password: yup.string().required(),\n    port: yup\n        .number()\n        .required()\n        .min(1)\n        .max(9999),\n});\n\nexport default () => {\n    const config = useSelector(state => state.config);\n    const dispatch = useDispatch();\n\n    const onSubmit = async values => {\n        await dispatch(setConfigAndSave(values));\n        notification('Settings has been updated');\n    };\n\n    return (\n        <div>\n            <h2>Settings</h2>\n            <div style={{ maxWidth: '400px' }}>\n                <Formik\n                    initialValues={config}\n                    validationSchema={validationSchema}\n                    onSubmit={onSubmit}\n                >\n                    {({ isSubmitting }) => (\n                        <Form>\n                            <Field name=\"hostname\" component={FormikInput} label=\"Hostname\" />\n                            <Field name=\"username\" component={FormikInput} label=\"Username\" />\n                            <Field\n                                name=\"password\"\n                                component={FormikInput}\n                                type=\"password\"\n                                label=\"Password\"\n                            />\n                            <Field name=\"port\" component={FormikInput} label=\"Port\" />\n\n                            <button\n                                className=\"btn btn-primary\"\n                                type=\"submit\"\n                                disabled={isSubmitting}\n                            >\n                                {isSubmitting && (\n                                    <span className=\"spinner-border spinner-border-sm mr-2\" />\n                                )}\n                                Submit\n                            </button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport FormikFieldWrapper from '../FormikFieldWrapper';\nimport _xor from 'lodash/xor';\n\nexport default props => {\n    const { form, field } = props;\n    const selectedValues = field.value || [];\n\n    const onChange = event => {\n        form.setFieldValue(field.name, _xor(selectedValues, [Number(event.target.value)]));\n    };\n\n    return (\n        <FormikFieldWrapper {...props}>\n            {props.options.map(option => (\n                <div key={option.value} className=\"form-check\">\n                    <label className=\"form-check-label\">\n                        <input\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            value={option.value}\n                            checked={selectedValues.includes(option.value)}\n                            onChange={onChange}\n                        />\n                        {option.label}\n                    </label>\n                </div>\n            ))}\n        </FormikFieldWrapper>\n    );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FormikCheckboxArray from 'components/FormikCheckboxArray';\nimport { Formik, Field, Form } from 'formik';\nimport { setSelectedKeywordsAndSave } from 'reducers/main.js';\nimport notification from 'helpers/notification';\n\nexport default props => {\n    const { keywords, selectedKeywords } = useSelector(state => ({\n        keywords: state.keywords,\n        selectedKeywords: state.selectedKeywords,\n    }));\n    const dispatch = useDispatch();\n\n    const options = keywords.map(item => ({ value: item.id, label: item.text }));\n\n    const onSubmit = async values => {\n        await dispatch(setSelectedKeywordsAndSave(values.selectedKeywords));\n        notification('Keywords have been updated');\n    };\n\n    return (\n        <div>\n            <h2>Keywords</h2>\n            <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nam ipsa laboriosam\n                architecto neque corrupti vel quam illum, amet facere, deleniti, soluta ut quidem\n                dolore beatae ipsam. Iste consequatur quod, tenetur in nemo esse amet officiis\n                veritatis, voluptatibus voluptates. Est quis ad laborum consequatur sint consectetur\n                quibusdam, natus voluptas quisquam sunt quas saepe animi labore cum doloribus odit\n                velit rerum. Quas fugiat, quidem sed, pariatur perspiciatis vitae sunt animi non id\n                minus adipisci, rerum quod. Omnis autem voluptatibus dicta beatae ratione, unde\n                iusto voluptate enim doloribus amet expedita odit, sunt quisquam laboriosam\n                reiciendis rerum labore corporis maxime, et impedit optio dolore.\n            </p>\n            <Formik initialValues={{ selectedKeywords }} onSubmit={onSubmit}>\n                {({ isSubmitting }) => (\n                    <Form>\n                        <Field\n                            name=\"selectedKeywords\"\n                            component={FormikCheckboxArray}\n                            options={options}\n                        />\n\n                        <button className=\"btn btn-primary\" type=\"submit\" disabled={isSubmitting}>\n                            {isSubmitting && (\n                                <span className=\"spinner-border spinner-border-sm mr-2\" />\n                            )}\n                            Update\n                        </button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n","export const modes = [\n    { value: \"record\", label: \"Record\" },\n    { value: \"notification\", label: \"Notification\" },\n    { value: \"protection\", label: \"Protection\" }\n];\n","import React from \"react\";\nimport style from \"./style.module.css\";\n\nexport default ({ loading = false, children }) => {\n    return (\n        <>\n            {loading && (\n                <div className={style.loader} />\n            )}\n            {children}\n        </>\n    );\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setConfigAndSave } from 'reducers/main.js';\nimport { modes } from '../../config.js';\nimport Loader from 'components/Loader';\nimport classnames from 'classnames';\n\nexport default props => {\n    const { mode } = useSelector(state => state.config);\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n\n    return (\n        <Loader loading={loading}>\n            <h2>Mode</h2>\n            <p>Here you can change proxy mode.</p>\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                {modes.map(item => (\n                    <button\n                        key={item.value}\n                        type=\"button\"\n                        className={classnames('btn', {\n                            'btn-primary active': item.value === mode,\n                            'btn-light': item.value !== mode,\n                        })}\n                        onClick={async () => {\n                            setLoading(true);\n                            await dispatch(setConfigAndSave({ mode: item.value }));\n                            setLoading(false);\n                        }}\n                    >\n                        {item.label}\n                    </button>\n                ))}\n            </div>\n        </Loader>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => {\n    return (\n        <div>\n            <h2>404 ERROR</h2>\n            <div style={{ marginBottom: \"1em\" }}>\n                Sorry, an error has occured, Requested page not found!\n            </div>\n            <Link className=\"btn btn-primary\" to=\"/\">\n                Take Me Home\n            </Link>\n        </div>\n    );\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport reducer from \"./reducers/main.js\";\nimport thunk from \"redux-thunk\";\n\nconst persistConfig = { key: \"proxy\", storage };\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport const store = createStore(\n    persistedReducer,\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\n            : f => f\n    )\n);\n\nexport const persistor = persistStore(store);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect } from \"react\";\nimport Nav from \"./components/Nav\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Home from \"./pages/Home\";\nimport Settings from \"./pages/Settings\";\nimport Keywords from \"./pages/Keywords\";\nimport Mode from \"./pages/Mode\";\nimport NotFound from \"./pages/NotFound\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store.js\";\nimport Loader from \"components/Loader\";\nimport { loadData } from 'reducers/main.js'\nimport style from \"./App.module.css\";\n\nexport default () => {\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        (async () => {\n            await store.dispatch(loadData());\n            setLoading(false);\n        })();\n    }, []);\n\n    if (loading) {\n        return <Loader loading />;\n    }\n\n    return (\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <Router basename={process.env.PUBLIC_URL}>\n                    <Nav />\n                    <div className={\"container \" + style.body}>\n                        <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <Route\n                                exact\n                                path=\"/settings\"\n                                component={Settings}\n                            />\n                            <Route exact path=\"/keywords\" component={Keywords} />\n                            <Route exact path=\"/mode\" component={Mode} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </div>\n                </Router>\n            </PersistGate>\n        </Provider>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"notification_wrapper__2R3r9\",\"alert\":\"notification_alert__Ll-Th\",\"close\":\"notification_close__1YKm5\"};"],"sourceRoot":""}